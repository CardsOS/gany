var searchIndex = JSON.parse('{\
"gany":{"doc":"","t":[3,3,5,12,12,12,11,11,11,11,11,11,11,11,5,12,12,12,11,11,5,11,11,11,11,5,12,11,11,11,11,11,11,12,5,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,5,12,5],"n":["Package","Repository","add_package","address","arch","arch","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_package","dependencies","description","description","deserialize","deserialize","drop_package","eq","eq","equivalent","equivalent","extract_package","files","fmt","fmt","from","from","into","into","keccak","load_repositories","name","name","ne","ne","refresh_remote_packages","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upgrade_packages","version","write_file"],"q":["gany","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The data associated with a package","The data associated with a repository","Add a package to your software installation","The address (URL or IP) of the repository","The CPU architecture intended for use with the packaged …","The CPU architecture the repository supports","","","","","","","","","Package a piece of software for future distribution","The package names, along with their versions, that a …","The description of the package","The description of the repository","","","Drop a package from your software installation","","","","","Extract a software package","The files that a package owns, including potential ghost …","","","","","","","The SHA3-256 hash of the LZ4-compressed archive the …","Load repository data from filesystem into memory","The name of the package","The name of the repository","","","Refresh the local package repository with one from a …","","","","","","","","","","","Upgrade your local packages with newer versions held in a …","The version of the packaged software","Write a file to the filesystem"],"i":[0,0,0,1,2,1,2,1,2,1,2,1,2,1,0,2,2,1,2,1,0,2,1,2,1,0,2,2,1,2,1,2,1,2,0,2,1,2,1,0,2,1,2,1,2,1,2,1,2,1,0,2,0],"f":[null,null,[[["argmatches",3]]],null,null,null,[[]],[[]],[[]],[[]],[[],["package",3]],[[],["repository",3]],[[]],[[]],[[["argmatches",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[["argmatches",3]]],[[["package",3]],["bool",15]],[[["repository",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["argmatches",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["vec",3,[["string",3]]]],null,null,[[["package",3]],["bool",15]],[[["repository",3]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[["str",15]]]],"p":[[3,"Repository"],[3,"Package"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};