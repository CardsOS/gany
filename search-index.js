var searchIndex = JSON.parse('{\
"gany":{"doc":"","t":[3,5,12,11,11,11,11,5,12,12,11,5,11,11,12,11,11,11,12,12,11,5,11,11,11,11,11,5,12,5],"n":["Package","add_package","arch","borrow","borrow_mut","clone","clone_into","create_package","dependencies","description","deserialize","drop_package","eq","equivalent","files","fmt","from","into","keccak","name","ne","refresh_remote_packages","serialize","to_owned","try_from","try_into","type_id","upgrade_packages","version","write_file"],"q":["gany","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The data associated with a package","Add a package to your software installation","The CPU architecture intended for use with the packaged …","","","","","Package a piece of software for future distribution","The package names, along with their versions, that a …","The description of the package","","Drop a package from your software installation","","","The files that a package owns, including potential ghost …","","","","The SHA3-256 hash of the LZ4-compressed archive the …","The name of the package","","Refresh the local package repository with one from a …","","","","","","Upgrade your local packages with newer versions held in a …","The version of the packaged software","Write a file to the filesystem"],"i":[0,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0],"f":[null,[[["argmatches",3]]],null,[[]],[[]],[[],["package",3]],[[]],[[["argmatches",3]]],null,null,[[],["result",4]],[[["argmatches",3]]],[[["package",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[["package",3]],["bool",15]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["str",15]]]],"p":[[3,"Package"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};