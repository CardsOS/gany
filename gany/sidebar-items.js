initSidebarItems({"derive":[["Deserialize",""],["Serialize",""]],"enum":[["Option","The `Option` type. See the module level documentation for more."]],"fn":[["add_package","Add a package to your software installation"],["create_package","Package a piece of software for future distribution"],["drop_package","Drop a package from your software installation"],["extract_package","Extract a software package"],["load_repositories","Load repository data from filesystem into memory"],["refresh_remote_packages","Refresh the local package repository with one from a remote software distribution"],["upgrade_packages","Upgrade your local packages with newer versions held in a remote software distribution"],["write_file","Write a file to the filesystem"]],"macro":[["env","Inspects an environment variable at compile time."]],"mod":[["env","Inspection and manipulation of the processâ€™s environment."],["fs","Filesystem manipulation operations."]],"struct":[["BufWriter","Wraps a writer and buffers its output."],["File","A reference to an open file on the filesystem."],["Package","The data associated with a package"],["Path","A slice of a path (akin to [`str`])."],["PathBuf","An owned, mutable path (akin to [`String`])."],["Repository","The data associated with a repository"]],"trait":[["Context","Provides the `context` method for `Result`."],["Deserialize","A data structure that can be deserialized from any data format supported by Serde."],["Digest","The `Digest` trait specifies an interface common for digest functions."],["Serialize","A data structure that can be serialized into any data format supported by Serde."],["TryInto","An attempted conversion that consumes `self`, which may or may not be expensive."],["Write","A trait for objects which are byte-oriented sinks."]]});